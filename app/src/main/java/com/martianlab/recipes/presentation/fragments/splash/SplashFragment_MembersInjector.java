// Generated by Dagger (https://dagger.dev).
package com.martianlab.recipes.presentation.fragments.splash;

import com.martianlab.recipes.domain.api.RoutingApi;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SplashFragment_MembersInjector implements MembersInjector<SplashFragment> {
  private final Provider<RoutingApi> routingApiProvider;

  public SplashFragment_MembersInjector(Provider<RoutingApi> routingApiProvider) {
    this.routingApiProvider = routingApiProvider;
  }

  public static MembersInjector<SplashFragment> create(Provider<RoutingApi> routingApiProvider) {
    return new SplashFragment_MembersInjector(routingApiProvider);
  }

  @Override
  public void injectMembers(SplashFragment instance) {
    injectRoutingApi(instance, routingApiProvider.get());
  }

  @InjectedFieldSignature("com.martianlab.recipes.presentation.fragments.splash.SplashFragment.routingApi")
  public static void injectRoutingApi(SplashFragment instance, RoutingApi routingApi) {
    instance.routingApi = routingApi;
  }
}
